/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.sazze.thrift.core;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * Possible ExceptionType Codes
 */
public enum ExceptionType implements org.apache.thrift.TEnum {
  UNKNOWN(0),
  GENERAL_ERROR(1),
  INVALID_ARGUMENT(2),
  NOT_FOUND(3),
  TEMPORARY_ERROR(4),
  INTERNAL_ERROR(5),
  NOT_AUTHORIZED(6);

  private final int value;

  private ExceptionType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ExceptionType findByValue(int value) { 
    switch (value) {
      case 0:
        return UNKNOWN;
      case 1:
        return GENERAL_ERROR;
      case 2:
        return INVALID_ARGUMENT;
      case 3:
        return NOT_FOUND;
      case 4:
        return TEMPORARY_ERROR;
      case 5:
        return INTERNAL_ERROR;
      case 6:
        return NOT_AUTHORIZED;
      default:
        return null;
    }
  }
}
